package frontend.CorbaServerInterface;


/**
* CorbaServerInterface/CorbaServerInterfacePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from CorbaServerInterface.idl
* Tuesday, 26 March, 2019 11:45:25 PM EDT
*/

public abstract class CorbaServerInterfacePOA extends org.omg.PortableServer.Servant
 implements CorbaServerInterfaceOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("addItem", new java.lang.Integer (0));
    _methods.put ("deleteItem", new java.lang.Integer (1));
    _methods.put ("listItemAvailability", new java.lang.Integer (2));
    _methods.put ("borrowItem", new java.lang.Integer (3));
    _methods.put ("findItem", new java.lang.Integer (4));
    _methods.put ("returnItem", new java.lang.Integer (5));
    _methods.put ("exchangeItems", new java.lang.Integer (6));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // CorbaServerInterface/CorbaServerInterface/addItem
       {
         String userId = in.read_string ();
         String itemId = in.read_string ();
         String itemName = in.read_string ();
         int quantity = in.read_long ();
         String $result = null;
         $result = this.addItem (userId, itemId, itemName, quantity);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 1:  // CorbaServerInterface/CorbaServerInterface/deleteItem
       {
         String userId = in.read_string ();
         String itemId = in.read_string ();
         int quantity = in.read_long ();
         String $result = null;
         $result = this.deleteItem (userId, itemId, quantity);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 2:  // CorbaServerInterface/CorbaServerInterface/listItemAvailability
       {
         String userId = in.read_string ();
         String $result = null;
         $result = this.listItemAvailability (userId);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 3:  // CorbaServerInterface/CorbaServerInterface/borrowItem
       {
         String userId = in.read_string ();
         String itemId = in.read_string ();
         int no_days = in.read_long ();
         String $result = null;
         $result = this.borrowItem (userId, itemId, no_days);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 4:  // CorbaServerInterface/CorbaServerInterface/findItem
       {
         String userId = in.read_string ();
         String itemName = in.read_string ();
         String $result = null;
         $result = this.findItem (userId, itemName);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 5:  // CorbaServerInterface/CorbaServerInterface/returnItem
       {
         String userId = in.read_string ();
         String itemId = in.read_string ();
         String $result = null;
         $result = this.returnItem (userId, itemId);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 6:  // CorbaServerInterface/CorbaServerInterface/exchangeItems
       {
         String userId = in.read_string ();
         String newItemId = in.read_string ();
         String oldItemId = in.read_string ();
         String $result = null;
         $result = this.exchangeItems (userId, newItemId, oldItemId);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:CorbaServerInterface/CorbaServerInterface:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public CorbaServerInterface _this() 
  {
    return CorbaServerInterfaceHelper.narrow(
    super._this_object());
  }

  public CorbaServerInterface _this(org.omg.CORBA.ORB orb) 
  {
    return CorbaServerInterfaceHelper.narrow(
    super._this_object(orb));
  }


} // class CorbaServerInterfacePOA
